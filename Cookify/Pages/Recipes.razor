@page "/recipes"
@using Cookify.Data
@inject WeatherForecastService ForecastService

<PageTitle>Recipes</PageTitle>

<h1>Recipes</h1>

<p>Select your desired recipes, and the necessary ingredients will be emailed to you.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form class="row g-3">
        <div class="col-auto">
            <input type="text" class="form-control" id="validationDefault01" value="email@example.com" required>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary mb-3">Submit</button>
        </div>
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>Select Recipe</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked>
                        <label class="custom-control-label" for="customCheck1">1</label>
                    </div>
                </td>
                <td>Köttfärsås</td>

            </tr>
            <tr>
                <td>
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck2">
                        <label class="custom-control-label" for="customCheck2">2</label>
                    </div>
                </td>
                <td>Korvstroganoff</td>

            </tr>
            <tr>
                <td>
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck3">
                        <label class="custom-control-label" for="customCheck3">3</label>
                    </div>
                </td>
                <td>Köttbullar</td>

            </tr>
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }
}
